### Hyperparameters
NEURONS: 10
GENERATIONS: 10
INDIVIDUALS: 10
PARENTS_MATING: 5
DATASET_NUMBER: null
DATA_FILE: "manual_dataset"
SIM_TIME: 13            # max 40 secs
NUMBER_PROCESSES: 10
LABEL_COLUMN_DATAFILE: [2]


PARENT_SELECTION: "rank"
CROSSOVER_TYPE: "single_point"
CROSSOVER_PROB: null
MUTATION_TYPE:  "random"
MUTATION_PERCENT: 20



### Run settings

WANDB_LOG:          True
SHOW_PLOTS:         True
SAVE_LAST_SOLUTION: True
IZHIK_TIME_STEP: 0.02


### Dataset parameters
DATASET_DIR: "Sim_data/derivative"
INPUT_COLUMN_DATAFILE: [1]


### Init settings
RANDOM_INIT_SEED: 1
INIT_SETTING: "random"
HALF_NEGATIVE_WEIGHTS: True

##############################################
# Want to keep params const:
#   - Set the intial conditions to that value
#   - Same for the parameter bounds


############# Initial conditions #############
INITIAL_PARAMS_RANDOM:
# First layer
 a:         [0.06,        0.17]
 b:         [0.14,         0.35]
 c:         [-30,         0]
 d:         [0,            2]
 threshold: [0,           30]
 v2:        [0.001,          0.15]
 v1:        [3,            7.5]
 v0:        [42,           200]
 tau_u:     [4,            80]
 weights_1:  [100,           200]

# Second layer
 leak:      [0.90,         0.90]
 weights_2: [0.15,         0.20]



#############  Parameter bounds #############
# no constrains --> null
# constraints --> {"low": 0,"high": 0.2, "step":0.01}   step is optional
# not trained --> set to float/int
PARAMETER_BOUNDS: #null if None in python
# First layer
  l1.neuron.a:  {"low": 0,"high": 0.2}
  l1.neuron.b:  {"low": 0.1,"high": 0.6}
  l1.neuron.c:  {"low": -50,"high": 0}
  l1.neuron.d:  {"low": 0,"high": 2}
  l1.neuron.v2: {"low": 0,"high": 0.4}
  l1.neuron.v1: {"low": 2,"high": 10}
  l1.neuron.v0: {"low": 30,"high": 300}
  l1.neuron.tau_u: {"low": 0,"high": 100}
  l1.neuron.thresh: {"low": 0,"high": 30}
  l1.ff.weight: {"low": -200,"high": 200}  #also negative!

# Second layer
  l2.neuron.leak: 0.9
  l2.ff.weight:   {"low": -0.25,"high": 0.25} #also negative!


